{import @value.latte}

<table class="table table-condensed ">
	<thead>
	<tr>
		<th>name</th>
		<th>type</th>
		<th>example</th>
		<th>description</th>
	</tr>
	</thead>
	<tbody>
	{foreach $parameters as $parameter => $schema}
		<tr>
			<td>
				<span class="d-inline"><span class="d-name">{$parameter}</span></span>
			</td>
			<td>
				<div class="d-inline">
				{if isset($schema[enum])}{*
					*}<span class="d-enum">{*
						*}<span class="d-enum-keyword">{*
						*}{if count($schema[enum]) === 1}const{else}enum{/if}{*
						*}</span>{*

						*}[{foreach $schema[enum] as $enumValue}{*
						*}{include value value => $enumValue}{sep}, {/sep}{*
						*}{/foreach}]{*
					*}</span>{*
				*}{else}{*
					*}{var $types = explode('|', $schema[type])}{*
					*}{foreach $types as $type}{*
						*}{if $type === 'int'}{*
							*}<span class="d-type d-type-int">int</span>{*
						*}{elseif $type === 'string'}{*
							*}<span class="d-type d-type-string">string</span>{*
						*}{elseif $type === 'float'}{*
							*}<span class="d-type d-type-float">float</span>{*
						*}{elseif $type === 'bool'}{*
							*}<span class="d-type d-type-bool">bool</span>{*
						*}{else}{*
							*}else scalar type{*
						*}{/if}{sep}<span class="d-type-sep">|</span>{/sep}{*
					*}{/foreach}{*
				*}{/if}
				{ifset $schema[optional]}
					{if $schema[optional]}
						<span class="d-optional">optional</span>
					{/if}
				{/ifset}
				</div>
			</td>
			<td>
			{ifset $schema[sample]}
				{include value value => $schema[sample]}
			{/ifset}
			</td>
			<td class="parameter-description">
			{ifset $schema[description]}
				{$schema[description]|texy}
			{/ifset}
			</td>
		</tr>
	{/foreach}
	</tbody>
</table>




